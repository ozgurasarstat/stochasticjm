library(stochasticjm)
library(stochasticjm)
library(stochasticjm)
vector1 <- c(5,9,3)
vector2 <- c(10,11,12,13,14,15)
# Take these vectors as input to the array.
result <- array(c(vector1,vector2),dim = c(3,3,2))
print(result)
dim(result)
array(1:6, dim = c(1,2,3))
a <- array(1:6, dim = c(2,3,1))
a
a <- array(1:6, dim = c(1,2,3))
a
a <- array(1:6, dim = c(3,1,2))
a
dim(a)
dim(a)[1]
library(robjm)
data(Orthodont)
head(Orthodont)
library(stochasticjm)
library(lmenssp)
data("data.sim.ibm")
dim(data.sim.ibm)
data <- data.sim.ibm[unique(data.sim.ibm$id)[1:50], ]
## fit the normal model
fit <- wrap(fixed = log.egfr ~ bage + fu,
random = ~ fu,
data = data,
id = "id",
model = "exp",
chains = 1,
timeVar = "fu",
cores = 1,
iter = 2000,
warmup = 1000,
control = list(adapt_delta = 0.8))
library(stochasticjm)
data <- data.sim.ibm[unique(data.sim.ibm$id)[1:50], ]
## fit the normal model
fit <- wrap(fixed = log.egfr ~ bage + fu,
random = ~ fu,
data = data,
id = "id",
model = "exp",
chains = 1,
timeVar = "fu",
cores = 1,
iter = 2000,
warmup = 1000,
control = list(adapt_delta = 0.8))
print(fit, pars = c("alpha", "Sigma", "sigma_W", "range", "sigma_Z"))
?print.stanfit
print(fit, pars = c("alpha", "Sigma", "sigma_W", "range", "sigma_Z"), digits_summary = 2)
## fit the normal model
fit <- wrap(fixed = log.egfr ~ bage + fu,
random = ~ fu,
data = data,
id = "id",
model = "exp",
chains = 1,
timeVar = "fu",
cores = 1,
iter = 2000,
warmup = 1000,
control = list(adapt_delta = 0.99))
print(fit, pars = c("alpha", "Sigma", "sigma_W", "range", "sigma_Z"), digits_summary = 2)
## fit the normal model
fit <- wrap(fixed = log.egfr ~ bage + fu,
random = ~ fu,
data = data,
id = "id",
model = "exp",
chains = 1,
timeVar = "fu",
priors = list(sigma_W = 1),
cores = 1,
iter = 2000,
warmup = 1000,
control = list(adapt_delta = 0.99))
print(fit, pars = c("alpha", "Sigma", "sigma_W", "range", "sigma_Z"), digits_summary = 2)
